open Feature;
let accessAllAlternates: tag = customTag("aalt");
let aboveBaseForms: tag = customTag("abvf");
let aboveBaseMarkPositioning: tag = customTag("abvm");
let aboveBaseSubstitutions: tag = customTag("abvs");
let alternativeFractions: tag = customTag("afrc");
let akhands: tag = customTag("akhn");
let belowBaseForms: tag = customTag("blwf");
let belowBaseMarkPositioning: tag = customTag("blwm");
let belowBaseSubstitutions: tag = customTag("blws");
let contextualAlternates: tag = customTag("calt");
let caseSensitiveForms: tag = customTag("case");
let glyphComposition: tag = customTag("ccmp");
let conjunctFormAfterRo: tag = customTag("cfar");
let conjunctForms: tag = customTag("cjct");
let contextualLigatures: tag = customTag("clig");
let centeredCjkPunctuation: tag = customTag("cpct");
let capitalSpacing: tag = customTag("cpsp");
let contextualSwash: tag = customTag("cswh");
let cursivePositioning: tag = customTag("curs");
let petiteCapitalsFromCapitals: tag = customTag("c2pc");
let smallCapitalsFromCapitals: tag = customTag("c2sc");
let distances: tag = customTag("dist");
let discretionaryLigatures: tag = customTag("dlig");
let denominators: tag = customTag("dnom");
let dotlessForms: tag = customTag("dtls");
let expertForms: tag = customTag("expt");
let finalGlyphOnLineAlternates: tag = customTag("falt");
let terminalForms2: tag = customTag("fin2");
let terminalForms3: tag = customTag("fin3");
let terminalForms: tag = customTag("fina");
let flattenedAccentForms: tag = customTag("flac");
let fractions: tag = customTag("frac");
let fullWidths: tag = customTag("fwid");
let halfForms: tag = customTag("half");
let halantForms: tag = customTag("haln");
let alternateHalfWidths: tag = customTag("halt");
let historicalForms: tag = customTag("hist");
let horizontalKanaAlternates: tag = customTag("hkna");
let historicalLigatures: tag = customTag("hlig");
let hangul: tag = customTag("hngl");
let hojoKanjiForms: tag = customTag("hojo");
let halfWidths: tag = customTag("hwid");
let initialForms: tag = customTag("init");
let isolatedForms: tag = customTag("isol");
let italics: tag = customTag("ital");
let justificationAlternates: tag = customTag("jalt");
let jis78Forms: tag = customTag("jp78");
let jis83Forms: tag = customTag("jp83");
let jis90Forms: tag = customTag("jp90");
let jis2004Forms: tag = customTag("jp04");
let kerning: tag = customTag("kern");
let leftBounds: tag = customTag("lfbd");
let standardLigatures: tag = customTag("liga");
let leadingJamoForms: tag = customTag("ljmo");
let liningFigures: tag = customTag("lnum");
let localizedForms: tag = customTag("locl");
let leftToRightAlternates: tag = customTag("ltra");
let leftToRightMirroredForms: tag = customTag("ltrm");
let markPositioning: tag = customTag("mark");
let medialForms2: tag = customTag("med2");
let medialForms: tag = customTag("medi");
let mathematicalGreek: tag = customTag("mgrk");
let markToMarkPositioning: tag = customTag("mkmk");
let markPositioningViaSubstitution: tag = customTag("mset");
let alternateAnnotationForms: tag = customTag("nalt");
let nlcKanjiForms: tag = customTag("nlck");
let nuktaForms: tag = customTag("nukt");
let numerators: tag = customTag("numr");
let oldstyleFigures: tag = customTag("onum");
let opticalBounds: tag = customTag("opbd");
let ordinals: tag = customTag("ordn");
let ornaments: tag = customTag("ornm");
let proportionalAlternateWidths: tag = customTag("palt");
let petiteCapitals: tag = customTag("pcap");
let proportionalKana: tag = customTag("pkna");
let proportionalFigures: tag = customTag("pnum");
let preBaseForms: tag = customTag("pref");
let preBaseSubstitutions: tag = customTag("pres");
let postBaseForms: tag = customTag("pstf");
let postBaseSubstitutions: tag = customTag("psts");
let proportionalWidths: tag = customTag("pwid");
let quarterWidths: tag = customTag("qwid");
let randomize: tag = customTag("rand");
let requiredContextualAlternates: tag = customTag("rclt");
let rakarForms: tag = customTag("rkrf");
let requiredLigatures: tag = customTag("rlig");
let rephForms: tag = customTag("rphf");
let rightBounds: tag = customTag("rtbd");
let rightToLeftAlternates: tag = customTag("rtla");
let rightToLeftMirroredForms: tag = customTag("rtlm");
let rubyNotationForms: tag = customTag("ruby");
let requiredVariationAlternates: tag = customTag("rvrn");
let stylisticAlternates: tag = customTag("salt");
let scientificInferiors: tag = customTag("sinf");
let opticalSize: tag = customTag("size");
let smallCapitals: tag = customTag("smcp");
let simplifiedForms: tag = customTag("smpl");
let stylisticSet1: tag = customTag("ss01");
let stylisticSet2: tag = customTag("ss02");
let stylisticSet3: tag = customTag("ss03");
let stylisticSet4: tag = customTag("ss04");
let stylisticSet5: tag = customTag("ss05");
let stylisticSet6: tag = customTag("ss06");
let stylisticSet7: tag = customTag("ss07");
let stylisticSet8: tag = customTag("ss08");
let stylisticSet9: tag = customTag("ss09");
let stylisticSet10: tag = customTag("ss10");
let stylisticSet11: tag = customTag("ss11");
let stylisticSet12: tag = customTag("ss12");
let stylisticSet13: tag = customTag("ss13");
let stylisticSet14: tag = customTag("ss14");
let stylisticSet15: tag = customTag("ss15");
let stylisticSet16: tag = customTag("ss16");
let stylisticSet17: tag = customTag("ss17");
let stylisticSet18: tag = customTag("ss18");
let stylisticSet19: tag = customTag("ss19");
let stylisticSet20: tag = customTag("ss20");
let mathScriptStyleAlternates: tag = customTag("ssty");
let stretchingGlyphDecomposition: tag = customTag("stch");
let subscript: tag = customTag("subs");
let superscript: tag = customTag("sups");
let swash: tag = customTag("swsh");
let titling: tag = customTag("titl");
let trailingJamoForms: tag = customTag("tjmo");
let traditionalNameForms: tag = customTag("tnam");
let tabularFigures: tag = customTag("tnum");
let traditionalForms: tag = customTag("trad");
let thirdWidths: tag = customTag("twid");
let unicase: tag = customTag("unic");
let alternateVerticalMetrics: tag = customTag("valt");
let vattuVariants: tag = customTag("vatu");
let verticalWriting: tag = customTag("vert");
let alternateVerticalHalfMetrics: tag = customTag("vhal");
let vowelJamoForms: tag = customTag("vjmo");
let verticalKanaAlternates: tag = customTag("vkna");
let verticalKerning: tag = customTag("vkrn");
let proportionalAlternateVerticalMetrics: tag = customTag("vpal");
let verticalAlternatesAndRotation: tag = customTag("vrt2");
let verticalAlternatesForRotation: tag = customTag("vrtr");
let slashedZero: tag = customTag("zero");
let characterValue1: tag = customTag("cv01");
let characterValue2: tag = customTag("cv02");
let characterValue3: tag = customTag("cv03");
let characterValue4: tag = customTag("cv04");
let characterValue5: tag = customTag("cv05");
let characterValue6: tag = customTag("cv06");
let characterValue7: tag = customTag("cv07");
let characterValue8: tag = customTag("cv08");
let characterValue9: tag = customTag("cv09");
let characterValue10: tag = customTag("cv10");
let characterValue11: tag = customTag("cv11");
let characterValue12: tag = customTag("cv12");
let characterValue13: tag = customTag("cv13");
let characterValue14: tag = customTag("cv14");
let characterValue15: tag = customTag("cv15");
let characterValue16: tag = customTag("cv16");
let characterValue17: tag = customTag("cv17");
let characterValue18: tag = customTag("cv18");
let characterValue19: tag = customTag("cv19");
let characterValue20: tag = customTag("cv20");
let characterValue21: tag = customTag("cv21");
let characterValue22: tag = customTag("cv22");
let characterValue23: tag = customTag("cv23");
let characterValue24: tag = customTag("cv24");
let characterValue25: tag = customTag("cv25");
let characterValue26: tag = customTag("cv26");
let characterValue27: tag = customTag("cv27");
let characterValue28: tag = customTag("cv28");
let characterValue29: tag = customTag("cv29");
let characterValue30: tag = customTag("cv30");
let characterValue31: tag = customTag("cv31");
let characterValue32: tag = customTag("cv32");
let characterValue33: tag = customTag("cv33");
let characterValue34: tag = customTag("cv34");
let characterValue35: tag = customTag("cv35");
let characterValue36: tag = customTag("cv36");
let characterValue37: tag = customTag("cv37");
let characterValue38: tag = customTag("cv38");
let characterValue39: tag = customTag("cv39");
let characterValue40: tag = customTag("cv40");
let characterValue41: tag = customTag("cv41");
let characterValue42: tag = customTag("cv42");
let characterValue43: tag = customTag("cv43");
let characterValue44: tag = customTag("cv44");
let characterValue45: tag = customTag("cv45");
let characterValue46: tag = customTag("cv46");
let characterValue47: tag = customTag("cv47");
let characterValue48: tag = customTag("cv48");
let characterValue49: tag = customTag("cv49");
let characterValue50: tag = customTag("cv50");
let characterValue51: tag = customTag("cv51");
let characterValue52: tag = customTag("cv52");
let characterValue53: tag = customTag("cv53");
let characterValue54: tag = customTag("cv54");
let characterValue55: tag = customTag("cv55");
let characterValue56: tag = customTag("cv56");
let characterValue57: tag = customTag("cv57");
let characterValue58: tag = customTag("cv58");
let characterValue59: tag = customTag("cv59");
let characterValue60: tag = customTag("cv60");
let characterValue61: tag = customTag("cv61");
let characterValue62: tag = customTag("cv62");
let characterValue63: tag = customTag("cv63");
let characterValue64: tag = customTag("cv64");
let characterValue65: tag = customTag("cv65");
let characterValue66: tag = customTag("cv66");
let characterValue67: tag = customTag("cv67");
let characterValue68: tag = customTag("cv68");
let characterValue69: tag = customTag("cv69");
let characterValue70: tag = customTag("cv70");
let characterValue71: tag = customTag("cv71");
let characterValue72: tag = customTag("cv72");
let characterValue73: tag = customTag("cv73");
let characterValue74: tag = customTag("cv74");
let characterValue75: tag = customTag("cv75");
let characterValue76: tag = customTag("cv76");
let characterValue77: tag = customTag("cv77");
let characterValue78: tag = customTag("cv78");
let characterValue79: tag = customTag("cv79");
let characterValue80: tag = customTag("cv80");
let characterValue81: tag = customTag("cv81");
let characterValue82: tag = customTag("cv82");
let characterValue83: tag = customTag("cv83");
let characterValue84: tag = customTag("cv84");
let characterValue85: tag = customTag("cv85");
let characterValue86: tag = customTag("cv86");
let characterValue87: tag = customTag("cv87");
let characterValue88: tag = customTag("cv88");
let characterValue89: tag = customTag("cv89");
let characterValue90: tag = customTag("cv90");
let characterValue91: tag = customTag("cv91");
let characterValue92: tag = customTag("cv92");
let characterValue93: tag = customTag("cv93");
let characterValue94: tag = customTag("cv94");
let characterValue95: tag = customTag("cv95");
let characterValue96: tag = customTag("cv96");
let characterValue97: tag = customTag("cv97");
let characterValue98: tag = customTag("cv98");
let characterValue99: tag = customTag("cv99");
